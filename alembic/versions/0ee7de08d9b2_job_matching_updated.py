"""job matching updated

Revision ID: 0ee7de08d9b2
Revises: 
Create Date: 2025-08-03 19:10:15.569501

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0ee7de08d9b2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backup_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('backup_type', sa.String(length=50), nullable=True),
    sa.Column('file_path', sa.String(length=512), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_backup_status_date', 'backup_logs', ['status', 'created_at'], unique=False)
    op.create_index('idx_backup_type_status', 'backup_logs', ['backup_type', 'status'], unique=False)
    op.create_index(op.f('ix_backup_logs_backup_type'), 'backup_logs', ['backup_type'], unique=False)
    op.create_index(op.f('ix_backup_logs_completed_at'), 'backup_logs', ['completed_at'], unique=False)
    op.create_index(op.f('ix_backup_logs_created_at'), 'backup_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_backup_logs_file_size'), 'backup_logs', ['file_size'], unique=False)
    op.create_index(op.f('ix_backup_logs_status'), 'backup_logs', ['status'], unique=False)
    op.create_table('job_postings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.String(length=100), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('job_type', sa.String(length=50), nullable=True),
    sa.Column('salary_min', sa.Float(), nullable=True),
    sa.Column('salary_max', sa.Float(), nullable=True),
    sa.Column('salary_currency', sa.String(length=3), nullable=True),
    sa.Column('experience_min', sa.Integer(), nullable=True),
    sa.Column('experience_max', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=10000), nullable=True),
    sa.Column('apply_link', sa.String(length=512), nullable=True),
    sa.Column('posting_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('processed_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_active_date', 'job_postings', ['is_active', 'posting_date'], unique=False)
    op.create_index('idx_job_location_type', 'job_postings', ['location', 'job_type'], unique=False)
    op.create_index('idx_job_salary_range', 'job_postings', ['salary_min', 'salary_max'], unique=False)
    op.create_index('idx_job_title_company', 'job_postings', ['job_title', 'company_name'], unique=False)
    op.create_index(op.f('ix_job_postings_company_name'), 'job_postings', ['company_name'], unique=False)
    op.create_index(op.f('ix_job_postings_created_at'), 'job_postings', ['created_at'], unique=False)
    op.create_index(op.f('ix_job_postings_experience_min'), 'job_postings', ['experience_min'], unique=False)
    op.create_index(op.f('ix_job_postings_is_active'), 'job_postings', ['is_active'], unique=False)
    op.create_index(op.f('ix_job_postings_job_title'), 'job_postings', ['job_title'], unique=False)
    op.create_index(op.f('ix_job_postings_job_type'), 'job_postings', ['job_type'], unique=False)
    op.create_index(op.f('ix_job_postings_location'), 'job_postings', ['location'], unique=False)
    op.create_index(op.f('ix_job_postings_posting_date'), 'job_postings', ['posting_date'], unique=False)
    op.create_index(op.f('ix_job_postings_salary_max'), 'job_postings', ['salary_max'], unique=False)
    op.create_index(op.f('ix_job_postings_salary_min'), 'job_postings', ['salary_min'], unique=False)
    op.create_index(op.f('ix_job_postings_source_id'), 'job_postings', ['source_id'], unique=False)
    op.create_table('match_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('resume_filename', sa.String(length=255), nullable=True),
    sa.Column('job_ids', sa.JSON(), nullable=False),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('parsed_resume_id', sa.Integer(), nullable=True),
    sa.Column('results', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_history_id'), 'match_history', ['id'], unique=False)
    op.create_index(op.f('ix_match_history_parsed_resume_id'), 'match_history', ['parsed_resume_id'], unique=False)
    op.create_index(op.f('ix_match_history_user_id'), 'match_history', ['user_id'], unique=False)
    op.create_index('ix_match_history_user_id_created_at', 'match_history', ['user_id', 'created_at'], unique=False)
    op.create_table('match_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('resume_filename', sa.String(length=255), nullable=False),
    sa.Column('job_ids', sa.JSON(), nullable=False),
    sa.Column('preferences', sa.JSON(), nullable=False),
    sa.Column('match_results', sa.JSON(), nullable=True),
    sa.Column('parsed_resume_id', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('progress_percentage', sa.Float(), nullable=True),
    sa.Column('current_step', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_jobs_created_at'), 'match_jobs', ['created_at'], unique=False)
    op.create_index(op.f('ix_match_jobs_status'), 'match_jobs', ['status'], unique=False)
    op.create_index(op.f('ix_match_jobs_task_id'), 'match_jobs', ['task_id'], unique=False)
    op.create_index(op.f('ix_match_jobs_user_id'), 'match_jobs', ['user_id'], unique=False)
    op.create_table('model_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('version_name', sa.String(length=100), nullable=True),
    sa.Column('model_type', sa.String(length=50), nullable=True),
    sa.Column('storage_path', sa.String(length=512), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_active_type', 'model_versions', ['is_active', 'model_type'], unique=False)
    op.create_index(op.f('ix_model_versions_activated_at'), 'model_versions', ['activated_at'], unique=False)
    op.create_index(op.f('ix_model_versions_created_at'), 'model_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_model_versions_is_active'), 'model_versions', ['is_active'], unique=False)
    op.create_index(op.f('ix_model_versions_model_type'), 'model_versions', ['model_type'], unique=False)
    op.create_index(op.f('ix_model_versions_version_name'), 'model_versions', ['version_name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_email_status', 'users', ['email', 'hashed_password'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_table('resumes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=512), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('parsed_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_resume_user_created', 'resumes', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_resumes_created_at'), 'resumes', ['created_at'], unique=False)
    op.create_index(op.f('ix_resumes_original_filename'), 'resumes', ['original_filename'], unique=False)
    op.create_index(op.f('ix_resumes_user_id'), 'resumes', ['user_id'], unique=False)
    op.create_table('feedback',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('resume_id', sa.UUID(), nullable=True),
    sa.Column('feedback_type', sa.String(length=20), nullable=False),
    sa.Column('match_score', sa.Float(), nullable=True),
    sa.Column('feedback_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['job_postings.id'], ),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_feedback_job_type', 'feedback', ['job_id', 'feedback_type'], unique=False)
    op.create_index('idx_feedback_type_score', 'feedback', ['feedback_type', 'match_score'], unique=False)
    op.create_index('idx_feedback_user_date', 'feedback', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_feedback_user_job', 'feedback', ['user_id', 'job_id'], unique=False)
    op.create_index(op.f('ix_feedback_created_at'), 'feedback', ['created_at'], unique=False)
    op.create_index(op.f('ix_feedback_feedback_type'), 'feedback', ['feedback_type'], unique=False)
    op.create_index(op.f('ix_feedback_job_id'), 'feedback', ['job_id'], unique=False)
    op.create_index(op.f('ix_feedback_match_score'), 'feedback', ['match_score'], unique=False)
    op.create_index(op.f('ix_feedback_resume_id'), 'feedback', ['resume_id'], unique=False)
    op.create_index(op.f('ix_feedback_user_id'), 'feedback', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedback_user_id'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_resume_id'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_match_score'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_job_id'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_feedback_type'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_created_at'), table_name='feedback')
    op.drop_index('idx_feedback_user_job', table_name='feedback')
    op.drop_index('idx_feedback_user_date', table_name='feedback')
    op.drop_index('idx_feedback_type_score', table_name='feedback')
    op.drop_index('idx_feedback_job_type', table_name='feedback')
    op.drop_table('feedback')
    op.drop_index(op.f('ix_resumes_user_id'), table_name='resumes')
    op.drop_index(op.f('ix_resumes_original_filename'), table_name='resumes')
    op.drop_index(op.f('ix_resumes_created_at'), table_name='resumes')
    op.drop_index('idx_resume_user_created', table_name='resumes')
    op.drop_table('resumes')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index('idx_user_email_status', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_model_versions_version_name'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_model_type'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_is_active'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_created_at'), table_name='model_versions')
    op.drop_index(op.f('ix_model_versions_activated_at'), table_name='model_versions')
    op.drop_index('idx_model_active_type', table_name='model_versions')
    op.drop_table('model_versions')
    op.drop_index(op.f('ix_match_jobs_user_id'), table_name='match_jobs')
    op.drop_index(op.f('ix_match_jobs_task_id'), table_name='match_jobs')
    op.drop_index(op.f('ix_match_jobs_status'), table_name='match_jobs')
    op.drop_index(op.f('ix_match_jobs_created_at'), table_name='match_jobs')
    op.drop_table('match_jobs')
    op.drop_index('ix_match_history_user_id_created_at', table_name='match_history')
    op.drop_index(op.f('ix_match_history_user_id'), table_name='match_history')
    op.drop_index(op.f('ix_match_history_parsed_resume_id'), table_name='match_history')
    op.drop_index(op.f('ix_match_history_id'), table_name='match_history')
    op.drop_table('match_history')
    op.drop_index(op.f('ix_job_postings_source_id'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_salary_min'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_salary_max'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_posting_date'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_location'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_job_type'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_job_title'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_is_active'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_experience_min'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_created_at'), table_name='job_postings')
    op.drop_index(op.f('ix_job_postings_company_name'), table_name='job_postings')
    op.drop_index('idx_job_title_company', table_name='job_postings')
    op.drop_index('idx_job_salary_range', table_name='job_postings')
    op.drop_index('idx_job_location_type', table_name='job_postings')
    op.drop_index('idx_job_active_date', table_name='job_postings')
    op.drop_table('job_postings')
    op.drop_index(op.f('ix_backup_logs_status'), table_name='backup_logs')
    op.drop_index(op.f('ix_backup_logs_file_size'), table_name='backup_logs')
    op.drop_index(op.f('ix_backup_logs_created_at'), table_name='backup_logs')
    op.drop_index(op.f('ix_backup_logs_completed_at'), table_name='backup_logs')
    op.drop_index(op.f('ix_backup_logs_backup_type'), table_name='backup_logs')
    op.drop_index('idx_backup_type_status', table_name='backup_logs')
    op.drop_index('idx_backup_status_date', table_name='backup_logs')
    op.drop_table('backup_logs')
    # ### end Alembic commands ###
